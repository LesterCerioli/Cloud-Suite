items:
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  id: DeclaracaoImportacaoAdicao
  parent: NotaFiscalNet.Core
  children:
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.CodigoFabricante
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.IsReadOnly
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Modificado
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Numero
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.NumeroSequencial
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  - NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.ValorDescontoItemDI
  langs:
  - csharp
  - vb
  name: DeclaracaoImportacaoAdicao
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: DeclaracaoImportacaoAdicao
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 10
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRepresenta uma Adição na Declaração de Importação do Produto\r\n"
  example: []
  syntax:
    content: 'public sealed class DeclaracaoImportacaoAdicao : ISerializavel, IModificavel'
    content.vb: >-
      Public NotInheritable Class DeclaracaoImportacaoAdicao

          Implements ISerializavel, IModificavel
  inheritance:
  - System.Object
  implements:
  - NotaFiscalNet.Core.Interfaces.ISerializavel
  - NotaFiscalNet.Core.Interfaces.IModificavel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  id: Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: Serializar(XmlWriter, INFe)
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Serializar(System.Xml.XmlWriter, NotaFiscalNet.Core.INFe)
  type: Method
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Serializar
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 12
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  syntax:
    content: public void Serializar(XmlWriter writer, INFe nfe)
    content.vb: Public Sub Serializar(writer As XmlWriter, nfe As INFe)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: nfe
      type: NotaFiscalNet.Core.INFe
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Numero
  id: Numero
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: Numero
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Numero
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Numero
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 29
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[nAdicao] Retorna ou define o Número da Adição\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "I26", FieldName = "nAdicao", DataType = "token", Pattern = "[1-9]{1}[0-9]{0,2}")]

      [CampoValidavel(1, ChaveErroValidacao.CampoNaoPreenchido)]

      public int Numero

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="I26", FieldName:="nAdicao", DataType:="token", Pattern:="[1-9]{1}[0-9]{0,2}")>

      <CampoValidavel(1, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property Numero As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.NumeroSequencial
  id: NumeroSequencial
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: NumeroSequencial
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.NumeroSequencial
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: NumeroSequencial
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 36
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[nSeqAdic] Retorna ou define o Número Sequencial do Item dentro da Adição\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "I27", FieldName = "nSeqAdic", DataType = "token", Pattern = "[1-9]{1}[0-9]{0,2}")]

      [CampoValidavel(2, ChaveErroValidacao.CampoNaoPreenchido)]

      public int NumeroSequencial

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="I27", FieldName:="nSeqAdic", DataType:="token", Pattern:="[1-9]{1}[0-9]{0,2}")>

      <CampoValidavel(2, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property NumeroSequencial As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.CodigoFabricante
  id: CodigoFabricante
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: CodigoFabricante
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.CodigoFabricante
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: CodigoFabricante
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 44
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[cFabricante] Retorna ou define o Código do Fabricante Estrangeiro, usado nos sistemas\r\ninternos de informação do emitente da NF-e\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "I28", FieldName = "cFabricante", DataType = "token", MinLength = 1, MaxLength = 60)]

      [CampoValidavel(3, ChaveErroValidacao.CampoNaoPreenchido)]

      public string CodigoFabricante

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="I28", FieldName:="cFabricante", DataType:="token", MinLength:=1, MaxLength:=60)>

      <CampoValidavel(3, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property CodigoFabricante As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.ValorDescontoItemDI
  id: ValorDescontoItemDI
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: ValorDescontoItemDI
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.ValorDescontoItemDI
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: ValorDescontoItemDI
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 52
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[cDescDI] Retorna ou define o Valor do Desconto do item da Adição na Declaração de\r\nImportação. Opcional.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "I29", FieldName = "vDescDI", DataType = "TDec_1302Opc", Pattern = "0\\.[0-9]{1}[1-9]{1}|0\\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?", Opcional = true)]

      [CampoValidavel(4, Opcional = true)]

      public decimal ValorDescontoItemDI

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="I29", FieldName:="vDescDI", DataType:="TDec_1302Opc", Pattern:="0\.[0-9]{1}[1-9]{1}|0\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?", Opcional:=True)>

      <CampoValidavel(4, Opcional:=True)>

      Public Property ValorDescontoItemDI As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.IsReadOnly
  id: IsReadOnly
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.IsReadOnly
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: IsReadOnly
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 64
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna o valor indicando se a Nota Fiscal Eletrônica está em modo somente-leitura.\r\n"
  remarks: "\r\nA Nota Fiscal Eletrônica estará em modo somente-leitura quando for instanciada a partir\r\nde um arquivo assinado digitalmente.\r\n"
  example: []
  syntax:
    content: >-
      public bool IsReadOnly

      {

          get;

      }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Modificado
  id: Modificado
  parent: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao
  langs:
  - csharp
  - vb
  name: Modificado
  fullName: NotaFiscalNet.Core.DeclaracaoImportacaoAdicao.Modificado
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Modificado
    path: src/NotaFiscalNet.Core/DeclaracaoImportacaoAdicao.cs
    startLine: 69
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna se a Classe foi modificada\r\n"
  example: []
  syntax:
    content: >-
      public bool Modificado

      {

          get;

      }
    content.vb: Public ReadOnly Property Modificado As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NotaFiscalNet.Core
  isExternal: false
  name: NotaFiscalNet.Core
  fullName: NotaFiscalNet.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: NotaFiscalNet.Core.Interfaces.ISerializavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: ISerializavel
  fullName: NotaFiscalNet.Core.Interfaces.ISerializavel
- uid: NotaFiscalNet.Core.Interfaces.IModificavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: IModificavel
  fullName: NotaFiscalNet.Core.Interfaces.IModificavel
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: NotaFiscalNet.Core.Interfaces
  fullName: NotaFiscalNet.Core.Interfaces
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NotaFiscalNet.Core.INFe
  parent: NotaFiscalNet.Core
  isExternal: false
  name: INFe
  fullName: NotaFiscalNet.Core.INFe
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
