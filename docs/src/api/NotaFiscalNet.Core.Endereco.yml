items:
- uid: NotaFiscalNet.Core.Endereco
  id: Endereco
  parent: NotaFiscalNet.Core
  children:
  - NotaFiscalNet.Core.Endereco.CEP
  - NotaFiscalNet.Core.Endereco.CodigoPaisBACEN
  - NotaFiscalNet.Core.Endereco.Modificado
  - NotaFiscalNet.Core.Endereco.NomePais
  - NotaFiscalNet.Core.Endereco.Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  - NotaFiscalNet.Core.Endereco.Telefone
  langs:
  - csharp
  - vb
  name: Endereco
  fullName: NotaFiscalNet.Core.Endereco
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Endereco
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 12
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRepresenta o Endereço do Emitente e do Destinatário da Nota Fiscal Eletrônica.\r\n"
  remarks: Equivalente ao tipo TEndereco no xml.
  example: []
  syntax:
    content: 'public sealed class Endereco : EnderecoSimples, IModificavel, ISerializavel'
    content.vb: >-
      Public NotInheritable Class Endereco

          Inherits EnderecoSimples

          Implements IModificavel, ISerializavel
  inheritance:
  - System.Object
  - NotaFiscalNet.Core.EnderecoSimples
  implements:
  - NotaFiscalNet.Core.Interfaces.IModificavel
  - NotaFiscalNet.Core.Interfaces.ISerializavel
  inheritedMembers:
  - NotaFiscalNet.Core.EnderecoSimples.Logradouro
  - NotaFiscalNet.Core.EnderecoSimples.Numero
  - NotaFiscalNet.Core.EnderecoSimples.Complemento
  - NotaFiscalNet.Core.EnderecoSimples.Bairro
  - NotaFiscalNet.Core.EnderecoSimples.CodigoMunicipioIBGE
  - NotaFiscalNet.Core.EnderecoSimples.NomeMunicipio
  - NotaFiscalNet.Core.EnderecoSimples.UF
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NotaFiscalNet.Core.Endereco.Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  id: Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: Serializar(XmlWriter, INFe)
  fullName: NotaFiscalNet.Core.Endereco.Serializar(System.Xml.XmlWriter, NotaFiscalNet.Core.INFe)
  type: Method
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Serializar
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 14
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  syntax:
    content: public void Serializar(XmlWriter writer, INFe nfe)
    content.vb: Public Sub Serializar(writer As XmlWriter, nfe As INFe)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: nfe
      type: NotaFiscalNet.Core.INFe
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Endereco.CEP
  id: CEP
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: CEP
  fullName: NotaFiscalNet.Core.Endereco.CEP
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: CEP
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 35
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define o Código do CEP (apenas números). Informar zeros não significativos. Opcional\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "C13", FieldName = "CEP", DataType = "token", Pattern = "[0-9]{8}", Opcional = true)]

      [CampoValidavel(8, Opcional = true)]

      public string CEP

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="C13", FieldName:="CEP", DataType:="token", Pattern:="[0-9]{8}", Opcional:=True)>

      <CampoValidavel(8, Opcional:=True)>

      Public Property CEP As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Endereco.CodigoPaisBACEN
  id: CodigoPaisBACEN
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: CodigoPaisBACEN
  fullName: NotaFiscalNet.Core.Endereco.CodigoPaisBACEN
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: CodigoPaisBACEN
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 46
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[cPais] Retorna ou define o Código do País de acordo com a Tabela do BACEN (Brasil-1058).\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "C14", FieldName = "cPais", DataType = "token", Pattern = "[0-9]{1,4}", Opcional = true)]

      [CampoValidavel(9, Opcional = true)]

      public int CodigoPaisBACEN

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="C14", FieldName:="cPais", DataType:="token", Pattern:="[0-9]{1,4}", Opcional:=True)>

      <CampoValidavel(9, Opcional:=True)>

      Public Property CodigoPaisBACEN As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Endereco.NomePais
  id: NomePais
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: NomePais
  fullName: NotaFiscalNet.Core.Endereco.NomePais
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: NomePais
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 63
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[xPais] Retorna ou define o Nome do País.\r\n"
  example: []
  syntax:
    content: "[NFeField(ID = \"C15\", FieldName = \"xPais\", DataType = \"TString\", Pattern = \"[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}\", MinLength = 1, MaxLength = 60, Opcional = true)]\n[CampoValidavel(10, Opcional = true)]\npublic string NomePais\n{\n    get;\n    set;\n}"
    content.vb: "<NFeField(ID:=\"C15\", FieldName:=\"xPais\", DataType:=\"TString\", Pattern:=\"[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}\", MinLength:=1, MaxLength:=60, Opcional:=True)>\n<CampoValidavel(10, Opcional:=True)>\nPublic Property NomePais As String"
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Endereco.Telefone
  id: Telefone
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: Telefone
  fullName: NotaFiscalNet.Core.Endereco.Telefone
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Telefone
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 72
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[fone] Retorna ou define o Telefone. Preencher com o DDD + número do telefone (informar\r\napenas número, sem espaços). Opcional.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(ID = "C16", FieldName = "fone", DataType = "token", Pattern = "[0-9]{1,10}", Opcional = true)]

      [CampoValidavel(11, Opcional = true)]

      public string Telefone

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(ID:="C16", FieldName:="fone", DataType:="token", Pattern:="[0-9]{1,10}", Opcional:=True)>

      <CampoValidavel(11, Opcional:=True)>

      Public Property Telefone As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Endereco.Modificado
  id: Modificado
  parent: NotaFiscalNet.Core.Endereco
  langs:
  - csharp
  - vb
  name: Modificado
  fullName: NotaFiscalNet.Core.Endereco.Modificado
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Endereco.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Modificado
    path: src/NotaFiscalNet.Core/Endereco.cs
    startLine: 87
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  syntax:
    content: >-
      public override bool Modificado

      {

          get;

      }
    content.vb: Public Overrides ReadOnly Property Modificado As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: NotaFiscalNet.Core.EnderecoSimples.Modificado
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: NotaFiscalNet.Core
  isExternal: false
  name: NotaFiscalNet.Core
  fullName: NotaFiscalNet.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: NotaFiscalNet.Core.EnderecoSimples
  parent: NotaFiscalNet.Core
  isExternal: false
  name: EnderecoSimples
  fullName: NotaFiscalNet.Core.EnderecoSimples
- uid: NotaFiscalNet.Core.Interfaces.IModificavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: IModificavel
  fullName: NotaFiscalNet.Core.Interfaces.IModificavel
- uid: NotaFiscalNet.Core.Interfaces.ISerializavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: ISerializavel
  fullName: NotaFiscalNet.Core.Interfaces.ISerializavel
- uid: NotaFiscalNet.Core.EnderecoSimples.Logradouro
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: Logradouro
  fullName: NotaFiscalNet.Core.EnderecoSimples.Logradouro
- uid: NotaFiscalNet.Core.EnderecoSimples.Numero
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: Numero
  fullName: NotaFiscalNet.Core.EnderecoSimples.Numero
- uid: NotaFiscalNet.Core.EnderecoSimples.Complemento
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: Complemento
  fullName: NotaFiscalNet.Core.EnderecoSimples.Complemento
- uid: NotaFiscalNet.Core.EnderecoSimples.Bairro
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: Bairro
  fullName: NotaFiscalNet.Core.EnderecoSimples.Bairro
- uid: NotaFiscalNet.Core.EnderecoSimples.CodigoMunicipioIBGE
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: CodigoMunicipioIBGE
  fullName: NotaFiscalNet.Core.EnderecoSimples.CodigoMunicipioIBGE
- uid: NotaFiscalNet.Core.EnderecoSimples.NomeMunicipio
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: NomeMunicipio
  fullName: NotaFiscalNet.Core.EnderecoSimples.NomeMunicipio
- uid: NotaFiscalNet.Core.EnderecoSimples.UF
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: UF
  fullName: NotaFiscalNet.Core.EnderecoSimples.UF
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: NotaFiscalNet.Core.Interfaces
  fullName: NotaFiscalNet.Core.Interfaces
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NotaFiscalNet.Core.INFe
  parent: NotaFiscalNet.Core
  isExternal: false
  name: INFe
  fullName: NotaFiscalNet.Core.INFe
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: NotaFiscalNet.Core.EnderecoSimples.Modificado
  parent: NotaFiscalNet.Core.EnderecoSimples
  isExternal: false
  name: Modificado
  fullName: NotaFiscalNet.Core.EnderecoSimples.Modificado
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
