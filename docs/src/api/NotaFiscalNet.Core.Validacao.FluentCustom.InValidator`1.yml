items:
- uid: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1
  id: InValidator`1
  parent: NotaFiscalNet.Core.Validacao.FluentCustom
  children:
  - NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1.IsValid(PropertyValidatorContext)
  langs:
  - csharp
  - vb
  name: InValidator<T>
  fullName: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator<T>
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: InValidator
    path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
    startLine: 7
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core.Validacao.FluentCustom
  syntax:
    content: 'public class InValidator<T> : PropertyValidator'
    content.vb: >-
      Public Class InValidator(Of T)

          Inherits PropertyValidator
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator(Of T)
  name.vb: InValidator(Of T)
- uid: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1
  langs:
  - csharp
  - vb
  name: InValidator(IEnumerable<T>)
  fullName: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator<T>.InValidator(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: .ctor
    path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
    startLine: 11
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core.Validacao.FluentCustom
  syntax:
    content: public InValidator(IEnumerable<T> enumerable)
    content.vb: Public Sub New(enumerable As IEnumerable(Of T))
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{{T}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator(Of T).InValidator(System.Collections.Generic.IEnumerable(Of T))
  name.vb: InValidator(IEnumerable(Of T))
- uid: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1.IsValid(PropertyValidatorContext)
  id: IsValid(PropertyValidatorContext)
  parent: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator`1
  langs:
  - csharp
  - vb
  name: IsValid(PropertyValidatorContext)
  fullName: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator<T>.IsValid(PropertyValidatorContext)
  type: Method
  source:
    remote:
      path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: IsValid
    path: src/NotaFiscalNet.Core/Validacao/FluentCustom/InValidator.cs
    startLine: 20
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core.Validacao.FluentCustom
  syntax:
    content: protected override bool IsValid(PropertyValidatorContext context)
    content.vb: Protected Overrides Function IsValid(context As PropertyValidatorContext) As Boolean
    parameters:
    - id: context
      type: PropertyValidatorContext
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NotaFiscalNet.Core.Validacao.FluentCustom.InValidator(Of T).IsValid(PropertyValidatorContext)
references:
- uid: NotaFiscalNet.Core.Validacao.FluentCustom
  isExternal: false
  name: NotaFiscalNet.Core.Validacao.FluentCustom
  fullName: NotaFiscalNet.Core.Validacao.FluentCustom
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PropertyValidatorContext
  isExternal: true
  name: PropertyValidatorContext
  fullName: PropertyValidatorContext
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
