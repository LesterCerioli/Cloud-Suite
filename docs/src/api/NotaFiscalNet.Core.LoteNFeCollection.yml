items:
- uid: NotaFiscalNet.Core.LoteNFeCollection
  id: LoteNFeCollection
  parent: NotaFiscalNet.Core
  children:
  - NotaFiscalNet.Core.LoteNFeCollection.#ctor
  - NotaFiscalNet.Core.LoteNFeCollection.#ctor(System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe})
  langs:
  - csharp
  - vb
  name: LoteNFeCollection
  fullName: NotaFiscalNet.Core.LoteNFeCollection
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: LoteNFeCollection
    path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
    startLine: 8
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRepresenta uma lista de Lotes de Notas Fiscais Eletrônicas.\r\n"
  example: []
  syntax:
    content: 'public sealed class LoteNFeCollection : BaseCollection<LoteNFe>, ICollection<LoteNFe>, IEnumerable<LoteNFe>, IEnumerable'
    content.vb: >-
      Public NotInheritable Class LoteNFeCollection

          Inherits BaseCollection(Of LoteNFe)

          Implements ICollection(Of LoteNFe), IEnumerable(Of LoteNFe), IEnumerable
  inheritance:
  - System.Object
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  implements:
  - System.Collections.Generic.ICollection{NotaFiscalNet.Core.LoteNFe}
  - System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe}
  - System.Collections.IEnumerable
  inheritedMembers:
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Item(System.Int32)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.GetEnumerator
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.System#Collections#IEnumerable#GetEnumerator
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PreAdd(System.ComponentModel.CancelEventArgs,NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PostAdd(NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PreRemove(System.ComponentModel.CancelEventArgs,NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PostRemove(NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Add(NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Clear
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Contains(NotaFiscalNet.Core.LoteNFe)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.CopyTo(NotaFiscalNet.Core.LoteNFe[],System.Int32)
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Count
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.IsReadOnly
  - NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Remove(NotaFiscalNet.Core.LoteNFe)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NotaFiscalNet.Core.LoteNFeCollection.#ctor
  id: '#ctor'
  parent: NotaFiscalNet.Core.LoteNFeCollection
  langs:
  - csharp
  - vb
  name: LoteNFeCollection()
  fullName: NotaFiscalNet.Core.LoteNFeCollection.LoteNFeCollection()
  type: Constructor
  source:
    remote:
      path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: .ctor
    path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
    startLine: 13
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nInicializa uma nova instância da classe <xref href=\"NotaFiscalNet.Core.LoteNFeCollection\" data-throw-if-not-resolved=\"false\"></xref>.\r\n"
  example: []
  syntax:
    content: public LoteNFeCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.LoteNFeCollection.#ctor(System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe})
  id: '#ctor(System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe})'
  parent: NotaFiscalNet.Core.LoteNFeCollection
  langs:
  - csharp
  - vb
  name: LoteNFeCollection(IEnumerable<LoteNFe>)
  fullName: NotaFiscalNet.Core.LoteNFeCollection.LoteNFeCollection(System.Collections.Generic.IEnumerable<NotaFiscalNet.Core.LoteNFe>)
  type: Constructor
  source:
    remote:
      path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: .ctor
    path: src/NotaFiscalNet.Core/LoteNFeCollection.cs
    startLine: 22
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nInicializa uma nova instância da classe <xref href=\"NotaFiscalNet.Core.LoteNFeCollection\" data-throw-if-not-resolved=\"false\"></xref> com base em uma\r\nlista de Lotes já existente.\r\n"
  example: []
  syntax:
    content: public LoteNFeCollection(IEnumerable<LoteNFe> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of LoteNFe))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe}
      description: "Lista de lotes pré-existente."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NotaFiscalNet.Core.LoteNFeCollection.LoteNFeCollection(System.Collections.Generic.IEnumerable(Of NotaFiscalNet.Core.LoteNFe))
  name.vb: LoteNFeCollection(IEnumerable(Of LoteNFe))
references:
- uid: NotaFiscalNet.Core
  isExternal: false
  name: NotaFiscalNet.Core
  fullName: NotaFiscalNet.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  parent: NotaFiscalNet.Core
  definition: NotaFiscalNet.Core.BaseCollection`1
  name: BaseCollection<LoteNFe>
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe)
  name.vb: BaseCollection(Of LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1
    name: BaseCollection
    fullName: NotaFiscalNet.Core.BaseCollection
  - name: <
    fullName: <
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1
    name: BaseCollection
    fullName: NotaFiscalNet.Core.BaseCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{NotaFiscalNet.Core.LoteNFe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<LoteNFe>
  fullName: System.Collections.Generic.ICollection<NotaFiscalNet.Core.LoteNFe>
  fullname.vb: System.Collections.Generic.ICollection(Of NotaFiscalNet.Core.LoteNFe)
  name.vb: ICollection(Of LoteNFe)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NotaFiscalNet.Core.LoteNFe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LoteNFe>
  fullName: System.Collections.Generic.IEnumerable<NotaFiscalNet.Core.LoteNFe>
  fullname.vb: System.Collections.Generic.IEnumerable(Of NotaFiscalNet.Core.LoteNFe)
  name.vb: IEnumerable(Of LoteNFe)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Item(System.Int32)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
  name: Item[Int32]
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Item[System.Int32]
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
    name: Item
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
    name: Item
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.GetEnumerator
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.GetEnumerator()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).GetEnumerator()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.System#Collections#IEnumerable#GetEnumerator
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PreAdd(System.ComponentModel.CancelEventArgs,NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,{T})
  name: PreAdd(CancelEventArgs, LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PreAdd(System.ComponentModel.CancelEventArgs, NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PreAdd(System.ComponentModel.CancelEventArgs, NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,`0)
    name: PreAdd
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PreAdd
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,`0)
    name: PreAdd
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PreAdd
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PostAdd(NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.PostAdd({T})
  name: PostAdd(LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PostAdd(NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PostAdd(NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostAdd(`0)
    name: PostAdd
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PostAdd
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostAdd(`0)
    name: PostAdd
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PostAdd
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PreRemove(System.ComponentModel.CancelEventArgs,NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,{T})
  name: PreRemove(CancelEventArgs, LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PreRemove(System.ComponentModel.CancelEventArgs, NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PreRemove(System.ComponentModel.CancelEventArgs, NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,`0)
    name: PreRemove
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PreRemove
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,`0)
    name: PreRemove
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PreRemove
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.PostRemove(NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.PostRemove({T})
  name: PostRemove(LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PostRemove(NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PostRemove(NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostRemove(`0)
    name: PostRemove
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.PostRemove
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostRemove(`0)
    name: PostRemove
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).PostRemove
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Add(NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Add({T})
  name: Add(LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Add(NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Add(NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Add(`0)
    name: Add
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Add
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Add(`0)
    name: Add
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Add
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Clear
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Clear
  name: Clear()
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Clear()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Clear()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Clear
    name: Clear
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Clear
    name: Clear
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Contains(NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Contains({T})
  name: Contains(LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Contains(NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Contains(NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Contains(`0)
    name: Contains
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Contains
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Contains(`0)
    name: Contains
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Contains
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.CopyTo(NotaFiscalNet.Core.LoteNFe[],System.Int32)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.CopyTo({T}[],System.Int32)
  name: CopyTo(LoteNFe[], Int32)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.CopyTo(NotaFiscalNet.Core.LoteNFe[], System.Int32)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).CopyTo(NotaFiscalNet.Core.LoteNFe(), System.Int32)
  name.vb: CopyTo(LoteNFe(), Int32)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.CopyTo
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).CopyTo
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Count
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Count
  name: Count
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Count
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Count
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.IsReadOnly
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.IsReadOnly
  name: IsReadOnly
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.IsReadOnly
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).IsReadOnly
- uid: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}.Remove(NotaFiscalNet.Core.LoteNFe)
  parent: NotaFiscalNet.Core.BaseCollection{NotaFiscalNet.Core.LoteNFe}
  definition: NotaFiscalNet.Core.BaseCollection`1.Remove({T})
  name: Remove(LoteNFe)
  fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Remove(NotaFiscalNet.Core.LoteNFe)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Remove(NotaFiscalNet.Core.LoteNFe)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Remove(`0)
    name: Remove
    fullName: NotaFiscalNet.Core.BaseCollection<NotaFiscalNet.Core.LoteNFe>.Remove
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Remove(`0)
    name: Remove
    fullName: NotaFiscalNet.Core.BaseCollection(Of NotaFiscalNet.Core.LoteNFe).Remove
  - name: (
    fullName: (
  - uid: NotaFiscalNet.Core.LoteNFe
    name: LoteNFe
    fullName: NotaFiscalNet.Core.LoteNFe
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: NotaFiscalNet.Core.BaseCollection`1
  parent: NotaFiscalNet.Core
  isExternal: false
  name: BaseCollection<T>
  fullName: NotaFiscalNet.Core.BaseCollection<T>
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T)
  name.vb: BaseCollection(Of T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1
    name: BaseCollection
    fullName: NotaFiscalNet.Core.BaseCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1
    name: BaseCollection
    fullName: NotaFiscalNet.Core.BaseCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: true
  name: Item[Int32]
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Item[System.Int32]
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
    name: Item
    fullName: NotaFiscalNet.Core.BaseCollection<T>.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Item(System.Int32)
    name: Item
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: GetEnumerator()
  fullName: NotaFiscalNet.Core.BaseCollection<T>.GetEnumerator()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: NotaFiscalNet.Core.BaseCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,{T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: true
  name: PreAdd(CancelEventArgs, T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.PreAdd(System.ComponentModel.CancelEventArgs, T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).PreAdd(System.ComponentModel.CancelEventArgs, T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,`0)
    name: PreAdd
    fullName: NotaFiscalNet.Core.BaseCollection<T>.PreAdd
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreAdd(System.ComponentModel.CancelEventArgs,`0)
    name: PreAdd
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).PreAdd
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.PostAdd({T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: PostAdd(T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.PostAdd(T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).PostAdd(T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostAdd(`0)
    name: PostAdd
    fullName: NotaFiscalNet.Core.BaseCollection<T>.PostAdd
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostAdd(`0)
    name: PostAdd
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).PostAdd
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,{T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: true
  name: PreRemove(CancelEventArgs, T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.PreRemove(System.ComponentModel.CancelEventArgs, T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).PreRemove(System.ComponentModel.CancelEventArgs, T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,`0)
    name: PreRemove
    fullName: NotaFiscalNet.Core.BaseCollection<T>.PreRemove
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PreRemove(System.ComponentModel.CancelEventArgs,`0)
    name: PreRemove
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).PreRemove
  - name: (
    fullName: (
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.PostRemove({T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: PostRemove(T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.PostRemove(T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).PostRemove(T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostRemove(`0)
    name: PostRemove
    fullName: NotaFiscalNet.Core.BaseCollection<T>.PostRemove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.PostRemove(`0)
    name: PostRemove
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).PostRemove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.Add({T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: Add(T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Add(T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Add(T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Add(`0)
    name: Add
    fullName: NotaFiscalNet.Core.BaseCollection<T>.Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Add(`0)
    name: Add
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.Clear
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: Clear()
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Clear()
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Clear()
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Clear
    name: Clear
    fullName: NotaFiscalNet.Core.BaseCollection<T>.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Clear
    name: Clear
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.Contains({T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: Contains(T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Contains(T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Contains(T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Contains(`0)
    name: Contains
    fullName: NotaFiscalNet.Core.BaseCollection<T>.Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Contains(`0)
    name: Contains
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.CopyTo({T}[],System.Int32)
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: true
  name: CopyTo(T[], Int32)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: NotaFiscalNet.Core.BaseCollection<T>.CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.BaseCollection`1.Count
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: Count
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Count
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Count
- uid: NotaFiscalNet.Core.BaseCollection`1.IsReadOnly
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: IsReadOnly
  fullName: NotaFiscalNet.Core.BaseCollection<T>.IsReadOnly
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).IsReadOnly
- uid: NotaFiscalNet.Core.BaseCollection`1.Remove({T})
  parent: NotaFiscalNet.Core.BaseCollection`1
  isExternal: false
  name: Remove(T)
  fullName: NotaFiscalNet.Core.BaseCollection<T>.Remove(T)
  fullname.vb: NotaFiscalNet.Core.BaseCollection(Of T).Remove(T)
  spec.csharp:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Remove(`0)
    name: Remove
    fullName: NotaFiscalNet.Core.BaseCollection<T>.Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: NotaFiscalNet.Core.BaseCollection`1.Remove(`0)
    name: Remove
    fullName: NotaFiscalNet.Core.BaseCollection(Of T).Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: NotaFiscalNet.Core.LoteNFeCollection
  parent: NotaFiscalNet.Core
  isExternal: false
  name: LoteNFeCollection
  fullName: NotaFiscalNet.Core.LoteNFeCollection
