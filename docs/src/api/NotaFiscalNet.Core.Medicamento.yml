items:
- uid: NotaFiscalNet.Core.Medicamento
  id: Medicamento
  parent: NotaFiscalNet.Core
  children:
  - NotaFiscalNet.Core.Medicamento.DataFabricacao
  - NotaFiscalNet.Core.Medicamento.DataValidade
  - NotaFiscalNet.Core.Medicamento.Modificado
  - NotaFiscalNet.Core.Medicamento.NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  - NotaFiscalNet.Core.Medicamento.NumeroLote
  - NotaFiscalNet.Core.Medicamento.PrecoMaximoConsumidor
  - NotaFiscalNet.Core.Medicamento.QuantidadeProdutoLote
  langs:
  - csharp
  - vb
  name: Medicamento
  fullName: NotaFiscalNet.Core.Medicamento
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Medicamento
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 11
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRepresenta um determinado tipo de Medicamento. Utilizado na NF-e como detalhamento nos casos\r\nde venda de medicamentos.\r\n"
  example: []
  syntax:
    content: 'public sealed class Medicamento : ISerializavel, IModificavel'
    content.vb: >-
      Public NotInheritable Class Medicamento

          Implements ISerializavel, IModificavel
  inheritance:
  - System.Object
  implements:
  - NotaFiscalNet.Core.Interfaces.ISerializavel
  - NotaFiscalNet.Core.Interfaces.IModificavel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NotaFiscalNet.Core.Medicamento.NumeroLote
  id: NumeroLote
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: NumeroLote
  fullName: NotaFiscalNet.Core.Medicamento.NumeroLote
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: NumeroLote
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 22
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define o Número do Lote do Medicamento. Até 20 caracteres.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "nLote", DataType = "token", ID = "K02", MinLength = 1, MaxLength = 20)]

      [CampoValidavel(1, ChaveErroValidacao.CampoNaoPreenchido)]

      public string NumeroLote

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="nLote", DataType:="token", ID:="K02", MinLength:=1, MaxLength:=20)>

      <CampoValidavel(1, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property NumeroLote As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Medicamento.QuantidadeProdutoLote
  id: QuantidadeProdutoLote
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: QuantidadeProdutoLote
  fullName: NotaFiscalNet.Core.Medicamento.QuantidadeProdutoLote
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: QuantidadeProdutoLote
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 36
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define a Quantidade de Produtos no Lote do Medicamento.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "qLote", DataType = "TDec_0803", ID = "K03", Pattern = "0|0\\.[0-9]{3}|[1-9]{1}[0-9]{0,7}(\\.[0-9]{3})?")]

      [CampoValidavel(2, ChaveErroValidacao.CampoNaoPreenchido)]

      public decimal QuantidadeProdutoLote

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="qLote", DataType:="TDec_0803", ID:="K03", Pattern:="0|0\.[0-9]{3}|[1-9]{1}[0-9]{0,7}(\.[0-9]{3})?")>

      <CampoValidavel(2, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property QuantidadeProdutoLote As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Medicamento.DataFabricacao
  id: DataFabricacao
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: DataFabricacao
  fullName: NotaFiscalNet.Core.Medicamento.DataFabricacao
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: DataFabricacao
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 51
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define a Data de Fabricação do produto.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "dFab", DataType = "TData", ID = "K04", Pattern = "\\d{4}-\\d{2}-\\d{2}")]

      [CampoValidavel(3, ChaveErroValidacao.CampoNaoPreenchido)]

      public DateTime DataFabricacao

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="dFab", DataType:="TData", ID:="K04", Pattern:="\d{4}-\d{2}-\d{2}")>

      <CampoValidavel(3, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property DataFabricacao As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Medicamento.DataValidade
  id: DataValidade
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: DataValidade
  fullName: NotaFiscalNet.Core.Medicamento.DataValidade
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: DataValidade
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 66
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define a Data de Validade do Produto.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "dVal", DataType = "TData", ID = "K05", Pattern = "\\d{4}-\\d{2}-\\d{2}")]

      [CampoValidavel(4, ChaveErroValidacao.CampoNaoPreenchido)]

      public DateTime DataValidade

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="dVal", DataType:="TData", ID:="K05", Pattern:="\d{4}-\d{2}-\d{2}")>

      <CampoValidavel(4, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property DataValidade As Date
    parameters: []
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Medicamento.PrecoMaximoConsumidor
  id: PrecoMaximoConsumidor
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: PrecoMaximoConsumidor
  fullName: NotaFiscalNet.Core.Medicamento.PrecoMaximoConsumidor
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: PrecoMaximoConsumidor
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 81
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna ou define o Preço Máximo do Medicamento para o consumidor.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "vPMC", DataType = "TDec_1302", ID = "K06", Pattern = "0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]

      [CampoValidavel(5, ChaveErroValidacao.CampoNaoPreenchido)]

      public decimal PrecoMaximoConsumidor

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="vPMC", DataType:="TDec_1302", ID:="K06", Pattern:="0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?")>

      <CampoValidavel(5, ChaveErroValidacao.CampoNaoPreenchido)>

      Public Property PrecoMaximoConsumidor As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.Medicamento.Modificado
  id: Modificado
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: Modificado
  fullName: NotaFiscalNet.Core.Medicamento.Modificado
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Modificado
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 96
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna se a Classe foi modificada\r\n"
  example: []
  syntax:
    content: >-
      public bool Modificado

      {

          get;

      }
    content.vb: Public ReadOnly Property Modificado As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NotaFiscalNet.Core.Medicamento.NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  id: NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  parent: NotaFiscalNet.Core.Medicamento
  langs:
  - csharp
  - vb
  name: ISerializavel.Serializar(XmlWriter, INFe)
  fullName: NotaFiscalNet.Core.Medicamento.NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(System.Xml.XmlWriter, NotaFiscalNet.Core.INFe)
  type: Method
  source:
    remote:
      path: src/NotaFiscalNet.Core/Medicamento.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar
    path: src/NotaFiscalNet.Core/Medicamento.cs
    startLine: 102
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  syntax:
    content: void ISerializavel.Serializar(XmlWriter writer, INFe nfe)
    content.vb: Sub NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(writer As XmlWriter, nfe As INFe) Implements ISerializavel.Serializar
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: nfe
      type: NotaFiscalNet.Core.INFe
  name.vb: NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(XmlWriter, INFe)
references:
- uid: NotaFiscalNet.Core
  isExternal: false
  name: NotaFiscalNet.Core
  fullName: NotaFiscalNet.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: NotaFiscalNet.Core.Interfaces.ISerializavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: ISerializavel
  fullName: NotaFiscalNet.Core.Interfaces.ISerializavel
- uid: NotaFiscalNet.Core.Interfaces.IModificavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: IModificavel
  fullName: NotaFiscalNet.Core.Interfaces.IModificavel
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: NotaFiscalNet.Core.Interfaces
  fullName: NotaFiscalNet.Core.Interfaces
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  fullName: System.DateTime
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NotaFiscalNet.Core.INFe
  parent: NotaFiscalNet.Core
  isExternal: false
  name: INFe
  fullName: NotaFiscalNet.Core.INFe
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
