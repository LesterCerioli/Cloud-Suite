items:
- uid: NotaFiscalNet.Core.VolumeCarga
  id: VolumeCarga
  parent: NotaFiscalNet.Core
  children:
  - NotaFiscalNet.Core.VolumeCarga.Especie
  - NotaFiscalNet.Core.VolumeCarga.Lacres
  - NotaFiscalNet.Core.VolumeCarga.Marca
  - NotaFiscalNet.Core.VolumeCarga.Modificado
  - NotaFiscalNet.Core.VolumeCarga.NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  - NotaFiscalNet.Core.VolumeCarga.Numeracao
  - NotaFiscalNet.Core.VolumeCarga.PesoBruto
  - NotaFiscalNet.Core.VolumeCarga.PesoLiquido
  - NotaFiscalNet.Core.VolumeCarga.QuantidadeVolumes
  langs:
  - csharp
  - vb
  name: VolumeCarga
  fullName: NotaFiscalNet.Core.VolumeCarga
  type: Class
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: VolumeCarga
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 9
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRepresenta as informações de Volume da Carga.\r\n"
  example: []
  syntax:
    content: 'public sealed class VolumeCarga : ISerializavel, IModificavel'
    content.vb: >-
      Public NotInheritable Class VolumeCarga

          Implements ISerializavel, IModificavel
  inheritance:
  - System.Object
  implements:
  - NotaFiscalNet.Core.Interfaces.ISerializavel
  - NotaFiscalNet.Core.Interfaces.IModificavel
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: NotaFiscalNet.Core.VolumeCarga.QuantidadeVolumes
  id: QuantidadeVolumes
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: QuantidadeVolumes
  fullName: NotaFiscalNet.Core.VolumeCarga.QuantidadeVolumes
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: QuantidadeVolumes
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 23
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[qVol] Retorna ou define a Quantidade de Volumes transportados (valor máximo\r\n999999999999999). Opcional.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "qVol", DataType = "token", ID = "X27", Pattern = "[0-9]{1,15}")]

      public long QuantidadeVolumes

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="qVol", DataType:="token", ID:="X27", Pattern:="[0-9]{1,15}")>

      Public Property QuantidadeVolumes As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.Especie
  id: Especie
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: Especie
  fullName: NotaFiscalNet.Core.VolumeCarga.Especie
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Especie
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 37
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[esp] Retorna ou define a Espécie dos Volumes transportados. Opcional.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "esp", DataType = "token", ID = "X28", MinLength = 1, MaxLength = 60)]

      public string Especie

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="esp", DataType:="token", ID:="X28", MinLength:=1, MaxLength:=60)>

      Public Property Especie As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.Marca
  id: Marca
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: Marca
  fullName: NotaFiscalNet.Core.VolumeCarga.Marca
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Marca
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 50
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[marca] Retorna ou define a Marca dos volumes transportados. Opcional.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "marca", DataType = "token", ID = "X29", MinLength = 1, MaxLength = 60)]

      public string Marca

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="marca", DataType:="token", ID:="X29", MinLength:=1, MaxLength:=60)>

      Public Property Marca As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.Numeracao
  id: Numeracao
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: Numeracao
  fullName: NotaFiscalNet.Core.VolumeCarga.Numeracao
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Numeracao
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 63
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[nVol] Retorna ou define a Numeração dos volumes transportados.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "nVol", DataType = "token", ID = "X30", MinLength = 1, MaxLength = 60)]

      public string Numeracao

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="nVol", DataType:="token", ID:="X30", MinLength:=1, MaxLength:=60)>

      Public Property Numeracao As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.PesoLiquido
  id: PesoLiquido
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: PesoLiquido
  fullName: NotaFiscalNet.Core.VolumeCarga.PesoLiquido
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: PesoLiquido
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 76
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[pesoL] Retorna ou define o Peso Líquido (em kg) do Volume.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "pesoL", DataType = "TDec_1203", ID = "X31", Pattern = "0|0\\.[0-9]{3}|[1-9]{1}[0-9]{0,11}(\\.[0-9]{3})?")]

      public decimal PesoLiquido

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="pesoL", DataType:="TDec_1203", ID:="X31", Pattern:="0|0\.[0-9]{3}|[1-9]{1}[0-9]{0,11}(\.[0-9]{3})?")>

      Public Property PesoLiquido As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.PesoBruto
  id: PesoBruto
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: PesoBruto
  fullName: NotaFiscalNet.Core.VolumeCarga.PesoBruto
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: PesoBruto
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 91
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[pesoB] Retorna ou define o Peso Bruto (em kg) do Volume.\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "pesoB", DataType = "TDec_1203", ID = "X32", Pattern = "0|0\\.[0-9]{3}|[1-9]{1}[0-9]{0,11}(\\.[0-9]{3})?")]

      public decimal PesoBruto

      {

          get;

          set;

      }
    content.vb: >-
      <NFeField(FieldName:="pesoB", DataType:="TDec_1203", ID:="X32", Pattern:="0|0\.[0-9]{3}|[1-9]{1}[0-9]{0,11}(\.[0-9]{3})?")>

      Public Property PesoBruto As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NotaFiscalNet.Core.VolumeCarga.Lacres
  id: Lacres
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: Lacres
  fullName: NotaFiscalNet.Core.VolumeCarga.Lacres
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Lacres
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 105
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\n[lacres] Retorna uma Coleção de Lacres\r\n"
  example: []
  syntax:
    content: >-
      [NFeField(FieldName = "lacres", ID = "X33", MinLength = 1, MaxLength = 60)]

      public StringCollection Lacres

      {

          get;

      }
    content.vb: >-
      <NFeField(FieldName:="lacres", ID:="X33", MinLength:=1, MaxLength:=60)>

      Public ReadOnly Property Lacres As StringCollection
    parameters: []
    return:
      type: NotaFiscalNet.Core.StringCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NotaFiscalNet.Core.VolumeCarga.Modificado
  id: Modificado
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: Modificado
  fullName: NotaFiscalNet.Core.VolumeCarga.Modificado
  type: Property
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: Modificado
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 111
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  summary: "\r\nRetorna se a Classe foi modificada\r\n"
  example: []
  syntax:
    content: >-
      public bool Modificado

      {

          get;

      }
    content.vb: Public ReadOnly Property Modificado As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NotaFiscalNet.Core.VolumeCarga.NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  id: NotaFiscalNet#Core#Interfaces#ISerializavel#Serializar(System.Xml.XmlWriter,NotaFiscalNet.Core.INFe)
  parent: NotaFiscalNet.Core.VolumeCarga
  langs:
  - csharp
  - vb
  name: ISerializavel.Serializar(XmlWriter, INFe)
  fullName: NotaFiscalNet.Core.VolumeCarga.NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(System.Xml.XmlWriter, NotaFiscalNet.Core.INFe)
  type: Method
  source:
    remote:
      path: src/NotaFiscalNet.Core/VolumeCarga.cs
      branch: docs
      repo: git@github.com:NotaFiscalNet/NotaFiscalNet.git
    id: NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar
    path: src/NotaFiscalNet.Core/VolumeCarga.cs
    startLine: 119
  assemblies:
  - NotaFiscalNet.Core
  namespace: NotaFiscalNet.Core
  syntax:
    content: void ISerializavel.Serializar(XmlWriter writer, INFe nfe)
    content.vb: Sub NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(writer As XmlWriter, nfe As INFe) Implements ISerializavel.Serializar
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: nfe
      type: NotaFiscalNet.Core.INFe
  name.vb: NotaFiscalNet.Core.Interfaces.ISerializavel.Serializar(XmlWriter, INFe)
references:
- uid: NotaFiscalNet.Core
  isExternal: false
  name: NotaFiscalNet.Core
  fullName: NotaFiscalNet.Core
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: NotaFiscalNet.Core.Interfaces.ISerializavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: ISerializavel
  fullName: NotaFiscalNet.Core.Interfaces.ISerializavel
- uid: NotaFiscalNet.Core.Interfaces.IModificavel
  parent: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: IModificavel
  fullName: NotaFiscalNet.Core.Interfaces.IModificavel
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: NotaFiscalNet.Core.Interfaces
  isExternal: false
  name: NotaFiscalNet.Core.Interfaces
  fullName: NotaFiscalNet.Core.Interfaces
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: NotaFiscalNet.Core.StringCollection
  parent: NotaFiscalNet.Core
  isExternal: false
  name: StringCollection
  fullName: NotaFiscalNet.Core.StringCollection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NotaFiscalNet.Core.INFe
  parent: NotaFiscalNet.Core
  isExternal: false
  name: INFe
  fullName: NotaFiscalNet.Core.INFe
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
