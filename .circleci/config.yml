version: 2.1

jobs:
  build:
    docker:
      - image: jetcipher/circleci-dotnet-core:3.1
    steps:
      - checkout
      - run:
          name: Restore CloudSuite.Infrastructure
          command: dotnet restore
          working_directory: ./src/Infrastructure/CloudSuite.Infrastructure
      - run:
          name: Restore CloudSuite.Infrastructure.CrossCutting
          command: dotnet build ./src/Infrastructure/CloudSuite.Infrastructure.CrossCutting
      - run:
          name: Restore CloudSuite.Modules.Domain
          command: dotnet build ./src/Modules.CloudSuite.Modules.Domain
      - run:
          name: Restore CloudSuite.Modules.Application
          command: dotnet build ./src/Modules/CloudSuite.Modules.Application
      - run:
          name: Restore CloudSuite.Services.Core.API
          command: dotnet build ./src/Rest/CloudSuite.Services.Core.API
      - run:
          name: Restore CloudSuite Solution
          command: dotnet build ./CloudSuite.sln
      - run:
          name: Build
          command: dotnet build -c Release
          working_directory: ./src/Infrastructure/CloudSuite.Infrastructure
      - run:
          name: Build
          command: dotnet build -c Release
          working_directory: ./src/Infrastructure/CloudSuite.Infrastructure.CrossCutting
      - run:
          name: Build
          command: dotnet build -c Release
          working_directory: ./src/Modules/CloudSuite.Modules.Application
      - run:
          name: Running Tests
          command: dotnet test
          working_directory: ./test/CloudSuite.Infrastructure.Tests
      - run:
          name: Running Tests
          command: dotnet test
          working_directory: ./test/CloudSuite.Modules.Application.Tests
      - run:
          name: Running Tests
          command: dotnet test
          working_directory: ./test/CloudSuite.Modules.Domain.Tests
      - run:
          name: Running Tests
          command: dotnet test
          working_directory: ./test/CloudSuite.Services.Core.API.Tests
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            docker build -t CloudSuite.Services.Core.API .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker tag boku herocod3r/CloudSuite.Services.Core.API
            docker push herocod3r/CloudSuite.Services.Core.API